.level
  .level-left
    .level-item
      %h1.title.is-2= @course.name
  - if user_admin?
    .level-right
      .level-item.buttons
        = link_to new_admin_course_lesson_path(@course), class: 'button' do
          %span.icon.is-small
            %i.fas.fa-user-shield
          %span
            = t('courses.new-video')
        = link_to edit_admin_course_path(@course), class: 'button is-link is-outlined' do
          %span.icon.is-small
            %i.fas.fa-user-shield
          %span
            = t('course.admin.edit')

%h2.title.is-4
  = t('courses.videos')

- if @course.lessons.active.empty?
  .box
    =t('courses.no_lessons_yet')
- first = @course.lessons.active.rank(:row_order).first
- last  = @course.lessons.active.rank(:row_order).last
- @course.lessons.active.rank(:row_order).each do |lesson|
  .box
    - if lesson.preview_image.attached? && lesson.video.attached?
      %article.media
        %figure.media-left
          - if user_has_access?
            %video(controls="true" poster="#{rails_blob_url(lesson.preview_image)}" preload="auto" id="vs-#{lesson.id}" width="240")
              %source{src: rails_blob_url(lesson.video), type:"video/mp4"}
          - else
            .image
              = image_tag lesson.preview_image.variant(resize_to_fill: [320,240]).processed
        .media-content
          .content
            .level
              .level-left
                .level-item
                  %h3.is-title.is-7.has-text-primary
                    = lesson.name
              - if user_admin?
                .level-right
                  .level-item
                    .buttons
                      - if lesson != first
                        = link_to admin_course_lesson_position_path(lesson.course, lesson_id: lesson.id), method: :post, class: 'button is-primary is-outlined is-small' do
                          %span.icon.is-small.has-text-primary
                            %i.fas.fa-arrow-up
                      - if lesson != last
                        = link_to admin_course_lesson_position_path(lesson.course, lesson_id: lesson.id), method: :delete, class: 'button is-primary is-outlined is-small' do
                          %span.icon.is-small.has-text-primary
                            %i.fas.fa-arrow-down
                      = link_to edit_admin_course_lesson_path(lesson.course, lesson), class: 'button is-link is-outlined is-small' do
                        %span.icon.is-small
                          %i.fas.fa-user-shield
                        %span
                          = t('course.admin.edit-lesson')
                      = link_to [:admin, lesson.course, lesson], method: :delete, data: { confirm: 'Are you sure?' }, class: 'button is-link is-outlined is-small' do
                        %span.icon.is-small
                          %i.fas.fa-user-shield
                        %span
                          = t('course.admin.destroy-lesson')
            = l lesson.created_at, format: '%A, %d. %B %Y'
            - if lesson.video.attached? && lesson.video.metadata[:duration]
              = "%s:" % t('video.length')
              = (lesson.video.metadata[:duration] / 60).round
              =t('video.minutes')


- if user_admin?
  %h2.title.is-4
    = t('courses.videos-inactive')

  - @course.lessons.inactive.each do |lesson|
    .box.has-background-danger.has-text-light
      - if lesson.preview_image.attached? && lesson.video.attached?
        %article.media
          %figure.media-left
            %video(controls="true" poster="#{rails_blob_url(lesson.preview_image)}" preload="auto" id="vs-#{lesson.id}" width="240")
              %source{src: rails_blob_url(lesson.video), type:"video/mp4"}
          .media-content
            .content
              %h3.is-title.is-7
                = lesson.name
              = l lesson.created_at, format: '%A, %d. %B %Y'
              .level
                .level-item
                  .buttons
                    = link_to edit_admin_course_lesson_path(lesson.course, lesson), class: 'button is-link is-outlined' do
                      %span.icon.is-small
                        %i.fas.fa-user-shield
                      %span
                        = t('course.admin.edit-lesson')

                    = link_to [:admin, lesson.course, lesson], method: :delete, data: { confirm: 'Are you sure?' }, class: 'button is-link is-outlined' do
                      %span.icon.is-small
                        %i.fas.fa-user-shield
                      %span
                        = t('course.admin.destroy-lesson')

  .buttons
    = link_to new_admin_course_lesson_path(@course), class: 'button' do
      %span.icon.is-small
        %i.fas.fa-user-shield
      %span
        = t('courses.new-video')

    = link_to edit_admin_course_path(@course), class: 'button is-outlined' do
      %span.icon.is-small
        %i.fas.fa-user-shield
      %span
        =t('courses.edit')

%hr

= link_to t('Back'), :back, class: 'button is-link'
