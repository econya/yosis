-# SPDX-FileCopyrightText: 2020 Felix Wolfsteller
-#
-# SPDX-License-Identifier: AGPL-3.0-or-later

.level
  .level-left
    %h1.title
      = t('admin.user.user-heading')
  .level-right
    .level-item
      = link_to t('admin.user.impersonate'), impersonate_user_path(@user), method: :post, class: 'button'


%p
  %b= t('admin.user.email')
= @user.email

%p
  %b= t('admin.user.created_at')
= @user.created_at

%p
  %b= t('admin.user.confirmed_at')
= @user.confirmed_at
- if @user.confirmed_at.nil?
  %span.tag
    = t('admin.user.unconfirmed')

%p
  %b= t('admin.user.sign_in_count')
= @user.sign_in_count

%p
  %b= t('admin.user.last_sign_in_at')
= @user.last_sign_in_at
- if @user.last_sign_in_at.nil?
  %span.tag
    = t('admin.user.never-signed-in')

%br
%br

%h2.title.is-5
  = t('admin.user.subscriptions.title')

%table.table.is-hoverable
  %thead
    %tr
      %th
        = t('admin.user.subscriptions.timespan')
      %th
        = t('admin.user.subscriptions.notes')
      %th
  %tbody
    - if @user.role == "admin"
      %tr
        %td(colspan=2)
          = t('admin.user.subscriptions.admins_no_need')
    - elsif @user.subscriptions.empty?
      %tr
        %td(colspan=2)
          = t('admin.user.subscriptions.none')
    - else
      - @user.subscriptions.each do |subscription|
        %tr
          %td
            - if subscription.active_today?
              .tag
                = t('subscription.currently_active')
            = l subscription.date_start, format: '%d. %B %Y'
            \-
            = l subscription.date_end, format: '%d. %B %Y'
          %td
            = subscription.notes
          %td
            = link_to t('actions.edit'),
              edit_admin_user_subscription_path(subscription.user, subscription),
              class: 'button'
            = link_to t('actions.delete'), [:admin, subscription.user, subscription],
              method: :delete,
              data: { confirm: t('actions.are_you_sure?') },
              class: 'button'
    %tr
      %td(colspan=2)
        = link_to new_admin_user_subscription_path(user_id: @user), class: 'button' do
          = t('subscription.new')
